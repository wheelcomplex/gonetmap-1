// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package gonetmap

func ifaceTOInt(i interface{}) int {
	var idx int
	switch i := i.(type) {
	case int:
		idx = int(i)
	case int16:
		idx = int(i)
	case int32:
		idx = int(i)
	case int64:
		idx = int(i)

	case uint:
		idx = int(i)
	case uint16:
		idx = int(i)
	case uint32:
		idx = int(i)
	case uint64:
		idx = int(i)
	}
	return idx
}

func ifaceTOUint16(i interface{}) uint16 {
	var idx uint16
	switch i := i.(type) {
	case int:
		idx = uint16(i)
	case int16:
		idx = uint16(i)
	case int32:
		idx = uint16(i)
	case int64:
		idx = uint16(i)

	case uint:
		idx = uint16(i)
	case uint16:
		idx = uint16(i)
	case uint32:
		idx = uint16(i)
	case uint64:
		idx = uint16(i)
	}
	return idx
}

func ifaceTOUint32(i interface{}) uint32 {
	var idx uint32
	switch i := i.(type) {
	case int:
		idx = uint32(i)
	case int16:
		idx = uint32(i)
	case int32:
		idx = uint32(i)
	case int64:
		idx = uint32(i)

	case uint:
		idx = uint32(i)
	case uint16:
		idx = uint32(i)
	case uint32:
		idx = uint32(i)
	case uint64:
		idx = uint32(i)
	}
	return idx
}
